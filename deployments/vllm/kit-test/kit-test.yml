apiVersion: apps/v1
kind: Deployment
metadata:
  name: kit-test
  namespace: vllm
spec:
  replicas: 1
  selector:
    matchLabels: { app.kubernetes.io/name: kit-test }
  template:
    metadata:
      labels: { app.kubernetes.io/name: kit-test }
    spec:
      nodeSelector:
        kubernetes.io/hostname: sonda-core
      tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "gpu"
          effect: "PreferNoSchedule"

      volumes:
      - name: modelkit
        emptyDir: {}                       # swap with a PVC if you want persistence
      initContainers:
      - name: kitops-init
        image: ghcr.io/kitops-ml/kitops-init:v1.7.0
        env:
        - name: MODELKIT_REF
          value: "harbor.sonda.red.local/sonda-red/smollm-135m-instruct:latest"
        - name: UNPACK_PATH
          value: /data
        - name: UNPACK_FILTER
          value: model
        - name: EXTRA_FLAGS
          value: "--tls-verify=false"
        volumeMounts: [{ name: modelkit, mountPath: /data }]
      containers:
      - name: vllm-kit-test
        image: intel/vllm:0.10.0-xpu
        args: ["vllm","--model","/data","--host","0.0.0.0","--port","8000","--served-model-name","smollm-135m-instruct"]
        ports: [{ containerPort: 8000 }]
        readinessProbe:
          httpGet: { path: /health, port: 8000 }
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet: { path: /health, port: 8000 }
          initialDelaySeconds: 15
          periodSeconds: 10
        resources:
          requests: { cpu: "6", memory: "16Gi", gpu.intel.com/i915: 1 }
          limits:   { cpu: "6", memory: "16Gi", gpu.intel.com/i915: 1 }
        volumeMounts: [{ name: modelkit, mountPath: /data }]
---
apiVersion: v1
kind: Service
metadata:
  name: kit-test
  namespace: vllm
spec:
  selector: { app.kubernetes.io/name: kit-test }
  ports: [{ name: http, port: 8000, targetPort: 8000 }]
  type: ClusterIP
